<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.foodie.mapper.BoardDbMapper">
  <!-- insert -->
  <!-- 신규 post -->
  <insert id="createPost" parameterType="Post" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO post (author_id, nickname, category, title, visibility, content)
    VALUES (#{authorId}, #{nickname}, #{category}, #{title}, #{visibility}, #{content})
  </insert>

  <!-- select -->
  <!-- post 번호로 post 찾기 -->
  <select id="findPostById" parameterType="Long" resultType="Post">
    SELECT * FROM post WHERE id=#{id} ORDER BY created_at DESC
  </select>
  <!-- nickname 으로 post 찾기 -->
  <select id="findPostByNickname" parameterType="String" resultType="Post">
    SELECT * FROM post WHERE MATCH(nickname) AGAINST(#{nickname} IN NATURAL LANGUAGE MODE)
  </select>
  <!-- 키워드로 title 찾기 -->
  <select id="findPostByTitle" parameterType="String" resultType="Post">
    SELECT * FROM post WHERE MATCH(title) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE)
  </select>
  <!-- 키워드로 title, content 찾기 -->
  <select id="findPostByTitleAndContent" parameterType="String" resultType="Post">
    SELECT * FROM post WHERE MATCH(title, content) AGAINST(#{keyword} IN NATURAL LANGUAGE MODE)
  </select>
  <!-- 키워드로 title, content, nickname 찾기 -->
  <select id="findPostByTitleAndContentAndNickname" parameterType="String" resultType="Post">
    SELECT * FROM post WHERE MATCH(title, content, nickname) AGAINST(#{keyword} IN NATURAL LANGUAGE
    MODE)
  </select>
  <!-- post 업데이트 -->
  <update id="updatePost" parameterType="PostUpdateRequestDTO">
    UPDATE post SET nickname=#{nickname}, category=#{category}, title=#{title},
    visibility=#{visibility}, content=#{content} WHERE id=#{id}
  </update>

  <!-- delete -->
  <!-- user 제거 -->
  <delete id="deletePost" parameterType="String">
    DELETE FROM post WHERE id=#{id}
  </delete>
</mapper>